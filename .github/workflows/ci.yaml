name: Build and test spark image

on:
  pull_request:
    types: [opened, ready_for_review, reopened, synchronize]
  push:
    branches:
      - master
    tags:
      - v*

jobs:
  build:
    runs-on: [self-hosted, docker, integration]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: quay.io/basisai/workload-standard # list of Docker images to use as base name for tags
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to Quay
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          # platforms: linux/amd64,linux/arm64,linux/386
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          outputs: type=docker,dest=/tmp/workload-standard-${{ github.sha }}.tar
      - name: Upload artifact
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/upload-artifact@v2
        with:
          name: docker-image
          path: /tmp/workload-standard-${{ github.sha }}.tar
          retention-days: 1

  scan:
    runs-on: [self-hosted, docker, integration]
    needs: build
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: docker-image
          path: /tmp
      - name: Run Trivy vulnerability scanner
        if: ${{ github.event_name == 'pull_request' }}
        uses: aquasecurity/trivy-action@master
        with:
          input: '/tmp/workload-standard:${{ github.sha }}.tar'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      - name: Run Trivy vulnerability scanner
        if: ${{ github.event_name != 'pull_request' }}
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.docker_meta.outputs.tags }}
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
